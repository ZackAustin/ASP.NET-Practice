@model HelloMVCWorld.Models.Movie
@{
    Layout = null;

    var helloWorld = "<b>Hello, world!</b>";
    var name = "John Doe";
}

@{ 
    var sum = 32 + 10;
    var greeting = "Hello, world!";
    var text = "";
    for (int i = 0; i < 3; i++)
    {
        text += greeting + " The result is " + sum + "<br/>";
    }
}

@{ 
    var helloCodeblock = "This is a code block...";

    <p>This is a tag with plain text and <b>markup</b> inside of it...</p>

    @:This is plain text!
    <br/><br/>
    <text>This is plain text as well, and we can
    even span multiple lines, if needed! </text>
    <br/><br/>
}

@*
    Here's a Razor server-side comment.
    It won't be rendered to the browser.
    It can also span multiple lines.
*@

@{ 
    @*
        Here's a Razor server-side comment.
    *@

    // C# style single-line comment.

    /*
        C# style multi-line comment.
        It can also span multiple lines.
    */
}

@*
    Looping data source..
*@
@{ 
    List<string> names = new List<string>()
    {
        "John Doe", "Jane Doe", "Joe Doe", "Jenna Doe", "Judy Doe"
    };
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@Model.Title</title>
</head>
<body>

    The movie <b>@Model.Title</b> was released @Model.ReleaseDate.ToLongDateString()

    <p>@helloWorld</p>
    <p>@Html.Raw(helloWorld)</p>

    Hello, @(name.Substring(0, 4)). Your age is: <b>@(37 + 5).</b>

    <h2>CodeBlocks</h2>
    Text: <br />
    @Html.Raw(text)

    @{
        <br/><br/>
        string helloWorldMsg = "Good day";
        if (DateTime.Now.Hour > 17)
        {
            helloWorldMsg = "Good evening";
        }
        helloWorldMsg += ", world!";
        helloWorldMsg = helloWorldMsg.ToUpper();
    }

    <div>
        @helloWorldMsg
    </div>

    @if(DateTime.Now.Year >= 2020)
    {
        <span>The year @DateTime.Now.Year has finally arrived!</span>
    }
    else
    {
        <span>We're still waiting for the year of 2020...</span>
    }

    @*
      Various loop types.  
    *@

    <ul>
        @for (int i = 0; i < names.Count; i++)
        {
            <li>@names[i]</li>
            @if (i >= 2)
            {
                <li>...and so on</li>
                break;
            }
        }
    </ul>

    <ul>
        @foreach (var n in names)
        {
            <li>@n</li>
        }
    </ul>

    <ul>
        @{ 
            int counter = 0;
        }
        @while (counter < names.Count)
        {
            <li>@names[counter++]</li>
        }
    </ul>

    <ul>
        @{ 
            int counter2 = 0;
        }
        @do
        {
            <li>@names[counter2++]</li>
        } while (counter2 < names.Count);
    </ul>

</body>
</html>
